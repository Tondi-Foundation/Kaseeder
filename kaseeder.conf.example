# Kaspa DNS Seeder Configuration Example
# This file demonstrates all available configuration options including advanced logging

# Basic configuration
app_dir = "~/.kaseeder"
known_peers = "127.0.0.1:16110,127.0.0.1:16111"
host = "seed.kaspa.org"
listen = "0.0.0.0:5354"
nameserver = "ns1.kaspa.org"
default_seeder = "127.0.0.1:16110"
profile = "6060"
grpc_listen = "0.0.0.0:3737"
min_protocol_version = 1
min_user_agent_version = "0.12.0"
netsuffix = 0
no_log_files = false
log_level = "info"
threads = 8

# Advanced logging configuration with rotation support
[advanced_logging]
# Log rotation strategy: "daily", "hourly", "size", "hybrid"
# - daily: Rotate logs every day at midnight
# - hourly: Rotate logs every hour
# - size: Rotate logs when they reach max_file_size_mb
# - hybrid: Daily rotation with size limit
rotation_strategy = "daily"

# Time-based rotation interval (in hours, for hourly rotation)
rotation_interval_hours = 24

# Whether to compress rotated log files (saves disk space)
compress_rotated_logs = true

# Compression level (1-9, where 9 is maximum compression)
# Higher compression = smaller files but slower compression
compression_level = 6

# Whether to include hostname in log files
include_hostname = true

# Whether to include process ID in log files
include_pid = true

# Custom log format pattern (optional)
# Available placeholders: {timestamp}, {level}, {target}, {message}, {file}, {line}
# custom_format = "{timestamp} [{level}] {target}: {message}"

# Whether to enable log buffering (improves performance)
enable_buffering = true

# Buffer size in bytes (64KB default)
buffer_size_bytes = 65536

# Maximum log file size in MB before rotation
max_file_size_mb = 100

# Number of rotated log files to keep
max_rotated_files = 10

# Whether to enable log file monitoring
enable_file_monitoring = true

# Log file monitoring interval in seconds
file_monitoring_interval = 300

# Performance monitoring configuration
[monitoring]
# Whether to enable performance monitoring
enabled = true

# Monitoring interval in seconds
interval_seconds = 60

# Whether to collect memory usage statistics
collect_memory_stats = true

# Whether to collect CPU usage statistics
collect_cpu_stats = true

# Whether to collect network statistics
collect_network_stats = true

# Whether to collect disk I/O statistics
collect_disk_stats = true

# Maximum number of historical data points to keep
max_history_points = 1000

# Whether to export metrics via HTTP endpoint
http_metrics = false

# HTTP metrics port (for Prometheus scraping)
http_metrics_port = 9090

# Network configuration
[network]
# Connection timeout in seconds
connection_timeout = 5

# Address response timeout in seconds
address_timeout = 8

# Maximum concurrent connections per thread
max_concurrent_connections = 3

# DNS configuration
[dns]
# Maximum addresses to return in DNS responses
max_addresses = 16

# TTL for DNS records in seconds
ttl = 300

# Whether to enable IPv6 support
enable_ipv6 = true

# gRPC configuration
[grpc]
# Maximum message size in bytes
max_message_size = 1048576

# Keep-alive interval in seconds
keep_alive_interval = 30

# Keep-alive timeout in seconds
keep_alive_timeout = 10

# Performance tuning
[performance]
# Crawler sleep interval between rounds in seconds
crawler_sleep_interval = 6

# Maximum concurrent polls per round
max_concurrent_polls = 24

# Quality score decay factor for node ranking
quality_decay_factor = 0.95

# Minimum quality score for node selection
min_quality_score = 0.1
